{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js"],"names":["items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","error","combineReducers","initialUserState","name","email","user","authActions","token","setError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","PrivateRoute","Component","component","redirectTo","routeProps","useSelector","authSelectors","getIsAuthenticated","render","props","to","PublicRoute","restricted","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","exact","style","activeStyle","useStyles","makeStyles","theme","root","margin","spacing","marginRight","UserMenu","dispatch","useDispatch","getUser","onLogout","useCallback","authOperations","logOut","classes","className","Button","onClick","variant","endIcon","AuthNav","appBar","backgroundColor","width","height","justifyContent","alignItems","AppBar","position","Toolbar","HomePage","lazy","ContactsView","Register","Login","App","this","onGetCurrentUser","Container","fixed","fallback","CircularProgress","path","mapDispatchToProps","getCurrentUser","connect","ReactDOM","StrictMode","document","getElementById","createAction","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get","getError","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError"],"mappings":"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","file":"static/js/main.6b8c723c.chunk.js","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n  // requestError,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n// const items = createReducer(initialState, {\n//   [actions.addContact]: (state, { payload }) => [...state, payload],\n//   [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n// });\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  // [requestError]: () => false,\n});\n\n//\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n//\nconst error = createReducer('', {\n  // [requestError]: (_, { payload }) => payload,\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport * as authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n// const middleware = [...getDefaultMiddleware()];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// const storeWithPersistor = { store, persistor };\n\nexport { store, persistor };\n// export default { store, persistor };\n","import { Route, Redirect } from 'react-router-dom';\n// import { connect } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит переданный компонент Component\n * - В противном случае рендерит Redirect на переданный в redirectTo маршрут (например /login)\n *    routeProps - пропсы роутера\n *    props - пропсы компонента Component, переданные при рендере PrivateRoute, которые нужно пробросить\n */\n// const PrivateRoute = ({ component: Component, isAuthenticated, redirectTo, ...routeProps }) => {\n\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={redirectTo} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from 'react-router-dom';\n// import { connect } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный (routeProps.restricted - задается при рендере компонента PublicRoute) например страница регистрации,\n *      и пользователь залогинен, рендерит редирект на redirectTo (например /contacts)\n * - В противном случае рендерит компонент Component\n *\n */\n// const PublicRoute = ({ component: Component, isAuthenticated, redirectTo, ...routeProps }) => (\nconst PublicRoute = ({ component: Component, redirectTo, ...routeProps }) => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(PublicRoute);\n","// import { connect } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#FFF',\n  },\n  activeLink: {\n    color: '#1b1332',\n  },\n};\n\nconst Navigation = () => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Главная\n      </NavLink>\n      {isAuthenticated && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Контакты\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(Navigation);\n","// import { connect } from 'react-redux';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppOutlined from '@material-ui/icons/ExitToAppOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n}));\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n\n  const user = useSelector(authSelectors.getUser);\n\n  const onLogout = useCallback(\n    () => dispatch(authOperations.logOut()),\n    [dispatch],\n  );\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <span className={classes.name}>Привет, {user.email}</span>\n      <Button\n        onClick={onLogout}\n        variant=\"contained\"\n        color=\"default\"\n        endIcon={<ExitToAppOutlined />}\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n}\n\n// const UserMenu = ({ user, onLogout }) => {\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.root}>\n//       <span className={classes.name}>Привет, {user.email}</span>\n//       <Button\n//         onClick={onLogout}\n//         variant=\"contained\"\n//         color=\"default\"\n//         endIcon={<ExitToAppOutlined />}\n//       >\n//         Выйти\n//       </Button>\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   user: authSelectors.getUser(state),\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#FFF',\n  },\n  activeLink: {\n    color: '#1b1332',\n    textDecoration: 'underline',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Войти\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","// import { connect } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: 'rgb(134, 43, 177)',\n    width: '100%',\n    height: 50,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default function AppBar() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  const classes = useStyles();\n\n  return (\n    <MaterialAppBar position=\"static\">\n      <Toolbar className={classes.appBar}>\n        <Navigation />\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n      </Toolbar>\n    </MaterialAppBar>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(AppBar);\n","import { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Container } from '@material-ui/core';\n\nimport { authOperations } from './redux/auth';\n// import { authSelectors } from './redux/auth';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\n// import Container from './components/Container';\nimport AppBar from './components/AppBar';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// import HomePage from './components/HomePage';\n// import ContactsView from './components/ContactsView';\n// import Register from './components/Register';\n// import Login from './components/Login';\n\n// import Message from './components/Message';\n\nimport './App.scss';\n\nconst HomePage = lazy(() => import('./components/HomePage'));\nconst ContactsView = lazy(() => import('./components/ContactsView'));\nconst Register = lazy(() => import('./components/Register'));\nconst Login = lazy(() => import('./components/Login'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      // <div className=\"App\">\n      <Container fixed>\n        <AppBar />\n        {/* <Message /> */}\n        {/* {!!this.props.error && <Message />} */}\n        <Suspense fallback={<CircularProgress className=\"progress\" />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomePage} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={Register}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={Login}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n      // </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => ({\n//   error: authSelectors.getError(state),\n// });\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n//\n// export const addContact = createAction('contacts/add');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n//\n// export const deleteContact = createAction('contacts/delete');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n//\nexport const changeFilter = createAction('contacts/changeFilter');\n\n// export const requestError = createAction('contacts/requestError');\n","import axios from 'axios';\nimport * as authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n// axios.defaults.baseURL = 'http://localhost:3001';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nexport const register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    // console.log(response, 'response - register operations');\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    // console.log(error, 'error - register operations');\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nexport const logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  // dispatch(authActions.loginError(''));\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    // console.log(error, 'error - logIn operations');\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nexport const logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  // dispatch(authActions.logoutError(''));\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    // console.log(error, 'error - logOut operations');\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  // dispatch(authActions.getCurrentUserError(''));\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    // console.log(error, 'error - getCurrentUser operations');\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\n// export default { register, logOut, logIn, getCurrentUser };\n","// export const getIsAuthenticated = (state) => Boolean(state.auth.token);\nexport const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nexport const getUser = state => state.auth.user;\n\nexport const getError = state => state.auth.error;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n"],"sourceRoot":""}