{"version":3,"sources":["../node_modules/@material-ui/icons/FilterList.js","../node_modules/@material-ui/icons/Delete.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","components/Filter/Filter.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactsView/ContactsView.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","getLoading","state","contacts","loading","getFilter","filter","getContacts","items","getFilteredContacts","createSelector","name","toLowerCase","includes","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","form","width","flexWrap","maxWidth","justifyContent","field","submit","margin","flexBasis","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","useState","setName","number","setNumber","handleSubmit","useCallback","e","newContact","preventDefault","find","contact","alert","a","addContactError","addContactRequest","axios","post","data","addContactSuccess","message","classes","className","noValidate","autoComplete","onSubmit","TextField","onChange","currentTarget","label","id","pattern","title","required","type","Button","variant","color","InputAdornment","props","ref","children","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","_extends","clsx","root","positionEnd","positionStart","hiddenLabel","filled","marginDense","Typography","withStyles","height","maxHeight","alignItems","whiteSpace","marginRight","marginLeft","pointerEvents","marginBottom","Filter","changeFilter","target","InputLabel","htmlFor","OutlinedInput","startAdornment","labelWidth","useEnhancedEffect","window","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","gutters","alignItemsFlexStart","secondaryAction","focusVisible","ButtonBase","container","pop","textDecoration","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","ListItemText","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","multiline","flex","minWidth","ListItemSecondaryAction","muiName","right","top","transform","IconButton","_props$edge","edge","_props$color","_props$disableFocusRi","disableFocusRipple","_props$size","size","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","fontSize","typography","pxToRem","padding","borderRadius","overflow","active","alpha","hoverOpacity","colorInherit","colorPrimary","main","colorSecondary","sizeSmall","item","background","boxShadow","text","ContactListItem","onClick","deleteContactError","deleteContactRequest","delete","deleteContactSuccess","deleteContact","ContactList","useEffect","fetchContactsError","fetchContactsRequest","get","fetchContactsSuccess","CircularProgress","List","map","styles","ContactsView","gutterBottom","style"],"mappings":"gJAEA,IAAIA,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mDACD,cAEJN,EAAQE,QAAUE,G,iCCjBlB,IAAIT,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,kFACD,UAEJN,EAAQE,QAAUE,G,uKCjBLG,EAAa,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAErCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAEtCC,EAAsBC,YACjC,CAACH,EAAaF,IACd,SAACG,EAAOF,GACN,OAAOE,EAAMF,QAAO,qBAAGK,KAChBC,cAAcC,SAASP,EAAOM,qB,kCCMnCE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,UAGjBC,KAAM,CACJC,MAAO,OACPL,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,MACfG,SAAU,OACVC,SAAU,OACVC,eAAgB,iBAElBC,MAAO,CAELF,SAAU,QAEZG,OAAQ,CACNC,OAAQb,EAAMG,QAAQ,EAAG,OAAQ,GACjCW,UAAW,WAMA,SAASC,IACtB,IAAMC,EAAWC,cAEX9B,EAAW+B,YAAYC,GAE7B,EAAwBC,mBAAS,IAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAeC,uBACnB,SAAAC,GCvBsB,IAAAC,GDwBpBD,EAAEE,iBAEEzC,EAAS0C,MAAK,SAAAC,GAAO,OAAIA,EAAQnC,OAASA,MAC5CoC,MAAM,GAAD,OAAIpC,EAAJ,8BAIPqB,GC/BoBW,ED+BmB,CAAEhC,OAAM2B,UC/BjB,uCAAI,WAAMN,GAAN,iBAAAgB,EAAA,6DACtChB,EAASiB,YAAgB,KACzBjB,EAASkB,eAF6B,kBAKbC,IAAMC,KAAK,YAAaT,GALX,gBAK5BU,EAL4B,EAK5BA,KACRrB,EAASsB,YAAkBD,IANS,kDAQpCrB,EAASiB,YAAgB,KAAMM,UARK,0DAAJ,wDDiC9BlB,EAAQ,IACRE,EAAU,OAEZ,CAACP,EAAUrB,EAAM2B,EAAQnC,IAIrBqD,EAAU1C,IAEhB,OACE,8BACE,uBACE2C,UAAWD,EAAQlC,KACnBoC,YAAU,EACVC,aAAa,MACbC,SAAUpB,EAJZ,UAME,cAACqB,EAAA,EAAD,CACEJ,UAAWD,EAAQ7B,MACnBhB,KAAK,OACLmD,SAAU,SAAApB,GAAC,OAAIL,EAAQK,EAAEqB,cAAcpE,QACvCA,MAAOgB,EACPqD,MAAM,qBACNC,GAAG,cACHC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,cAACP,EAAA,EAAD,CACEJ,UAAWD,EAAQ7B,MACnBhB,KAAK,SACLmD,SAAU,SAAApB,GAAC,OAAIH,EAAUG,EAAEqB,cAAcpE,QACzCA,MAAO2C,EACP0B,MAAM,iCACNC,GAAG,cACHI,KAAK,MACLH,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,cAACE,EAAA,EAAD,CACEb,UAAWD,EAAQ5B,OACnB2C,QAAQ,YACRC,MAAM,UACNH,KAAK,SAJP,mE,4EE1DJI,EAA8B5E,cAAiB,SAAwB6E,EAAOC,GAChF,IAAIC,EAAWF,EAAME,SACjBpB,EAAUkB,EAAMlB,QAChBC,EAAYiB,EAAMjB,UAClBoB,EAAmBH,EAAMI,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwBN,EAAMO,qBAC9BA,OAAiD,IAA1BD,GAA2CA,EAClEE,EAAwBR,EAAMS,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAWV,EAAMU,SACjBC,EAAcX,EAAMH,QACpBe,EAAQC,YAAyBb,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,YAEnJc,EAAiBC,eAAoB,GACrClB,EAAUc,EAcd,OAZIA,GAAeG,EAAejB,QAQ9BiB,IAAmBjB,IACrBA,EAAUiB,EAAejB,SAGP1E,gBAAoB6F,IAAmBC,SAAU,CACnEhG,MAAO,MACOE,gBAAoBkF,EAAWa,YAAS,CACtDnC,UAAWoC,YAAKrC,EAAQsC,KAAMrC,EAAwB,QAAb2B,EAAqB5B,EAAQuC,YAAcvC,EAAQwC,cAAef,GAAwBzB,EAAQyB,qBAAsBO,EAAeS,aAAezC,EAAQyC,YAAyB,WAAZ1B,GAAwBf,EAAQ0C,OAAkC,UAA1BV,EAAe3D,QAAsB2B,EAAQ2C,aACzSxB,IAAKA,GACJW,GAA4B,kBAAbV,GAA0BO,EAE7BP,EAF8D/E,gBAAoBuG,IAAY,CAC3G5B,MAAO,iBACNI,QAuDUyB,cAlIK,CAElBP,KAAM,CACJ1E,QAAS,OACTkF,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,UAIdP,OAAQ,CACN,oCAAqC,CACnChF,UAAW,KAKf8E,cAAe,CACbU,YAAa,GAIfX,YAAa,CACXY,WAAY,GAId1B,qBAAsB,CACpB2B,cAAe,QAIjBX,YAAa,GAGbE,YAAa,IA6FmB,CAChCxF,KAAM,qBADO0F,CAEZ5B,G,kBC5HG3D,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8E,KAAM,CACJvE,MAAO,OACPE,SAAU,OACVoF,aAAc,aAIH,SAASC,IACtB,IAAM9E,EAAWC,cAEX3B,EAAS4B,YAAY7B,GAErByD,EAAWrB,uBACf,SAAAC,GACEV,EAAS+E,YAAarE,EAAEsE,OAAOrH,UAEjC,CAACqC,IAGGwB,EAAU1C,IAEhB,OACE,uBAAM2C,UAAWD,EAAQsC,KAAMvB,QAAQ,WAAvC,UACE,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,wBAApB,oBACA,cAACC,EAAA,EAAD,CACExG,KAAK,SACLsD,GAAG,wBACHH,SAAUA,EACVnE,MAAOW,EACP8G,eACE,cAAC,EAAD,CAAgBhC,SAAS,QAAzB,SACE,cAAC,IAAD,MAGJiC,WAAY,Q,sDC8ChBC,EAAsC,qBAAXC,OAAyB1H,YAAkBA,kBAKtE2H,EAAwB3H,cAAiB,SAAkB6E,EAAOC,GACpE,IAAI8C,EAAoB/C,EAAM8B,WAC1BA,OAAmC,IAAtBiB,EAA+B,SAAWA,EACvDC,EAAmBhD,EAAMiD,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAgBlD,EAAMmD,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAepD,EAAME,SACrBpB,EAAUkB,EAAMlB,QAChBC,EAAYiB,EAAMjB,UAClBsE,EAAgBrD,EAAMI,UACtBkD,EAAwBtD,EAAMuD,mBAC9BA,OAA+C,IAA1BD,EAAmC,KAAOA,EAC/DE,EAAwBxD,EAAMyD,eAG9BC,GAFJF,OAAkD,IAA1BA,EAAmC,GAAKA,GAEjBzE,UAC3C0E,EAAiB5C,YAAyB2C,EAAuB,CAAC,cAClEG,EAAe3D,EAAM4D,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkB7D,EAAM8D,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwB/D,EAAMgE,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAiBjE,EAAMkE,QACvBA,OAA6B,IAAnBD,GAAoCA,EAC9CE,EAAwBnE,EAAMmE,sBAC9BC,EAAkBpE,EAAMqE,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDxD,EAAQC,YAAyBb,EAAO,CAAC,aAAc,YAAa,SAAU,WAAY,UAAW,YAAa,YAAa,qBAAsB,iBAAkB,QAAS,WAAY,iBAAkB,UAAW,wBAAyB,aAElPsE,EAAUnJ,aAAiBoJ,KAC3BC,EAAe,CACjBZ,MAAOA,GAASU,EAAQV,QAAS,EACjC9B,WAAYA,GAEV2C,EAActJ,SAAa,MAC/ByH,GAAkB,WACZK,GACEwB,EAAYC,SACdD,EAAYC,QAAQC,UAKvB,CAAC1B,IACJ,IAAI/C,EAAW/E,WAAeyJ,QAAQxB,GAClCyB,EAAqB3E,EAAS4E,QAAUC,YAAa7E,EAASA,EAAS4E,OAAS,GAAI,CAAC,4BACrFE,EAAe7J,eAAkB,SAAU8J,GAE7CR,EAAYC,QAAUQ,cAAqBD,KAC1C,IACCE,EAAYC,YAAWJ,EAAc/E,GAErCoF,EAAiBnE,YAAS,CAC5BnC,UAAWoC,YAAKrC,EAAQsC,KAAMrC,EAAWyF,EAAaZ,OAAS9E,EAAQ8E,OAAQI,GAAkBlF,EAAQwG,QAASpB,GAAWpF,EAAQoF,QAASJ,GAAYhF,EAAQgF,SAAUX,GAAUrE,EAAQqE,OAAuB,WAAfrB,GAA2BhD,EAAQyG,oBAAqBV,GAAsB/F,EAAQ0G,gBAAiBnB,GAAYvF,EAAQuF,UACjUP,SAAUA,GACTlD,GAECP,EAAYgD,GAAiB,KAQjC,OANIF,IACFkC,EAAejF,UAAYiD,GAAiB,MAC5CgC,EAAelB,sBAAwBhD,YAAKrC,EAAQ2G,aAActB,GAClE9D,EAAYqF,KAGVb,GAEFxE,EAAagF,EAAejF,WAAciD,EAAwBhD,EAAR,MAE/B,OAAvBkD,IACgB,OAAdlD,EACFA,EAAY,MAC0B,OAA7BgF,EAAejF,YACxBiF,EAAejF,UAAY,QAIXjF,gBAAoBoJ,IAAYtD,SAAU,CAC5DhG,MAAOuJ,GACOrJ,gBAAoBoI,EAAoBrC,YAAS,CAC/DnC,UAAWoC,YAAKrC,EAAQ6G,UAAWjC,GACnCzD,IAAKkF,GACJ1B,GAA8BtI,gBAAoBkF,EAAWgF,EAAgBnF,GAAWA,EAAS0F,SAGlFzK,gBAAoBoJ,IAAYtD,SAAU,CAC5DhG,MAAOuJ,GACOrJ,gBAAoBkF,EAAWa,YAAS,CACtDjB,IAAKkF,GACJE,GAAiBnF,OA0GPyB,eA/RK,SAAgBrF,GAClC,MAAO,CAEL8E,KAAM,CACJ1E,QAAS,OACTM,eAAgB,aAChB8E,WAAY,SACZpB,SAAU,WACVmF,eAAgB,OAChBhJ,MAAO,OACPiJ,UAAW,aACXC,UAAW,OACXC,WAAY,EACZC,cAAe,EACf,iBAAkB,CAChBC,gBAAiB5J,EAAM6J,QAAQC,OAAO/B,UAExC,+BAAgC,CAC9B6B,gBAAiB5J,EAAM6J,QAAQC,OAAO/B,UAExC,aAAc,CACZgC,QAAS,KAKbV,UAAW,CACTjF,SAAU,YAIZ+E,aAAc,GAGd7B,MAAO,CACLoC,WAAY,EACZC,cAAe,GAIjBV,oBAAqB,CACnBzD,WAAY,cAIdgC,SAAU,GAGVI,QAAS,CACPoC,aAAc,aAAaC,OAAOjK,EAAM6J,QAAQjC,SAChDsC,eAAgB,eAIlBlB,QAAS,CACPmB,YAAa,GACbC,aAAc,IAIhBvD,OAAQ,CACNwD,WAAYrK,EAAMsK,YAAYC,OAAO,mBAAoB,CACvDC,SAAUxK,EAAMsK,YAAYE,SAASC,WAEvC,UAAW,CACTlB,eAAgB,OAChBK,gBAAiB5J,EAAM6J,QAAQC,OAAOY,MAEtC,uBAAwB,CACtBd,gBAAiB,iBAMvBV,gBAAiB,CAGfkB,aAAc,IAIhBrC,SAAU,MA6MoB,CAChCpI,KAAM,eADO0F,CAEZmB,GCxQCmE,EAA4B9L,cAAiB,SAAsB6E,EAAOC,GAC5E,IAAIC,EAAWF,EAAME,SACjBpB,EAAUkB,EAAMlB,QAChBC,EAAYiB,EAAMjB,UAClByB,EAAwBR,EAAMS,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/D0G,EAAelH,EAAMmH,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAcpH,EAAMqH,QACpBC,EAAyBtH,EAAMsH,uBAC/BC,EAAgBvH,EAAMwH,UACtBC,EAA2BzH,EAAMyH,yBACjC7G,EAAQC,YAAyBb,EAAO,CAAC,WAAY,UAAW,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,6BAG7J4D,EADoBzI,aAAiBoJ,KACXX,MAE1ByD,EAAyB,MAAfD,EAAsBA,EAAclH,EAEnC,MAAXmH,GAAmBA,EAAQ1H,OAAS+B,KAAejB,IACrD4G,EAAuBlM,gBAAoBuG,IAAYR,YAAS,CAC9DrB,QAAS+D,EAAQ,QAAU,QAC3B7E,UAAWD,EAAQuI,QACnBjH,UAAW,OACX1D,QAAS,SACR4K,GAAyBD,IAG9B,IAAIG,EAAYD,EAWhB,OATiB,MAAbC,GAAqBA,EAAU7H,OAAS+B,KAAejB,IACzD+G,EAAyBrM,gBAAoBuG,IAAYR,YAAS,CAChErB,QAAS,QACTd,UAAWD,EAAQ0I,UACnB1H,MAAO,gBACPpD,QAAS,SACR+K,GAA2BD,IAGZrM,gBAAoB,MAAO+F,YAAS,CACtDnC,UAAWoC,YAAKrC,EAAQsC,KAAMrC,EAAW6E,GAAS9E,EAAQ8E,MAAOuD,GAASrI,EAAQqI,MAAOE,GAAWG,GAAa1I,EAAQ4I,WACzHzH,IAAKA,GACJW,GAAQyG,EAASG,MA4DP7F,cAnIK,CAElBP,KAAM,CACJuG,KAAM,WACNC,SAAU,EACVpL,UAAW,EACX2F,aAAc,GAIhBuF,UAAW,CACTlL,UAAW,EACX2F,aAAc,GAIhByB,MAAO,GAGPuD,MAAO,CACLV,YAAa,IAIfY,QAAS,GAGTG,UAAW,IAwGqB,CAChCvL,KAAM,mBADO0F,CAEZsF,GC1HCY,EAAuC1M,cAAiB,SAAiC6E,EAAOC,GAClG,IAAInB,EAAUkB,EAAMlB,QAChBC,EAAYiB,EAAMjB,UAClB6B,EAAQC,YAAyBb,EAAO,CAAC,UAAW,cAExD,OAAoB7E,gBAAoB,MAAO+F,YAAS,CACtDnC,UAAWoC,YAAKrC,EAAQsC,KAAMrC,GAC9BkB,IAAKA,GACJW,OAwBLiH,EAAwBC,QAAU,0BACnBnG,kBA9CK,CAElBP,KAAM,CACJV,SAAU,WACVqH,MAAO,GACPC,IAAK,MACLC,UAAW,qBAwCmB,CAChChM,KAAM,8BADO0F,CAEZkG,G,gBCoDCK,EAA0B/M,cAAiB,SAAoB6E,EAAOC,GACxE,IAAIkI,EAAcnI,EAAMoI,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCjI,EAAWF,EAAME,SACjBpB,EAAUkB,EAAMlB,QAChBC,EAAYiB,EAAMjB,UAClBsJ,EAAerI,EAAMF,MACrBA,OAAyB,IAAjBuI,EAA0B,UAAYA,EAC9CxE,EAAkB7D,EAAM8D,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDyE,EAAwBtI,EAAMuI,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAcxI,EAAMyI,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3C5H,EAAQC,YAAyBb,EAAO,CAAC,OAAQ,WAAY,UAAW,YAAa,QAAS,WAAY,qBAAsB,SAEpI,OAAoB7E,gBAAoBuK,IAAYxE,YAAS,CAC3DnC,UAAWoC,YAAKrC,EAAQsC,KAAMrC,EAAqB,YAAVe,GAAuBhB,EAAQ,QAAQyH,OAAOmC,YAAW5I,KAAUgE,GAAYhF,EAAQgF,SAAmB,UAAT2E,GAAoB3J,EAAQ,OAAOyH,OAAOmC,YAAWD,KAAS,CACtM,MAAS3J,EAAQ6J,UACjB,IAAO7J,EAAQ8J,SACfR,IACFS,cAAc,EACdC,aAAcP,EACdzE,SAAUA,EACV7D,IAAKA,GACJW,GAAqBzF,gBAAoB,OAAQ,CAClD4D,UAAWD,EAAQQ,OAClBY,OA+DUyB,eA1LK,SAAgBrF,GAClC,MAAO,CAEL8E,KAAM,CACJ2E,UAAW,SACX4B,KAAM,WACNoB,SAAUzM,EAAM0M,WAAWC,QAAQ,IACnCC,QAAS,GACTC,aAAc,MACdC,SAAU,UAEVtJ,MAAOxD,EAAM6J,QAAQC,OAAOiD,OAC5B1C,WAAYrK,EAAMsK,YAAYC,OAAO,mBAAoB,CACvDC,SAAUxK,EAAMsK,YAAYE,SAASC,WAEvC,UAAW,CACTb,gBAAiBoD,YAAMhN,EAAM6J,QAAQC,OAAOiD,OAAQ/M,EAAM6J,QAAQC,OAAOmD,cAEzE,uBAAwB,CACtBrD,gBAAiB,gBAGrB,aAAc,CACZA,gBAAiB,cACjBpG,MAAOxD,EAAM6J,QAAQC,OAAOtC,WAKhC6E,UAAW,CACT1G,YAAa,GACb,cAAe,CACbA,YAAa,IAKjB2G,QAAS,CACP5G,aAAc,GACd,cAAe,CACbA,aAAc,IAKlBwH,aAAc,CACZ1J,MAAO,WAIT2J,aAAc,CACZ3J,MAAOxD,EAAM6J,QAAQkB,QAAQqC,KAC7B,UAAW,CACTxD,gBAAiBoD,YAAMhN,EAAM6J,QAAQkB,QAAQqC,KAAMpN,EAAM6J,QAAQC,OAAOmD,cAExE,uBAAwB,CACtBrD,gBAAiB,iBAMvByD,eAAgB,CACd7J,MAAOxD,EAAM6J,QAAQqB,UAAUkC,KAC/B,UAAW,CACTxD,gBAAiBoD,YAAMhN,EAAM6J,QAAQqB,UAAUkC,KAAMpN,EAAM6J,QAAQC,OAAOmD,cAE1E,uBAAwB,CACtBrD,gBAAiB,iBAMvBpC,SAAU,GAGV8F,UAAW,CACTV,QAAS,EACTH,SAAUzM,EAAM0M,WAAWC,QAAQ,KAIrC3J,MAAO,CACLzC,MAAO,OACPH,QAAS,OACToF,WAAY,UACZ9E,eAAgB,cAmGY,CAChCf,KAAM,iBADO0F,CAEZuG,G,qBCvLG9L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuN,KAAM,CACJ1H,aAAc,QACd+D,gBAAiB5J,EAAM6J,QAAQ2D,WAAWvN,MAC1CwN,UACE,sGAEJnM,OAAQ,CACNsL,QAAS5M,EAAMG,QAAQ,GACvBsJ,UAAW,OACXjG,MAAOxD,EAAM6J,QAAQ6D,KAAKxC,eA+CfyC,GA3CS,SAAC,GAA0B,IAAxB1K,EAAuB,EAAvBA,GAAItD,EAAmB,EAAnBA,KAAM2B,EAAa,EAAbA,OAC7BN,EAAWC,cAEXuB,EAAU1C,KAEhB,OACE,eAAC,EAAD,CAAU0F,WAAW,aAAa/C,UAAWD,EAAQ+K,KAArD,UACE,cAAC,EAAD,CACExC,QAASpL,EACTuL,UACE,cAAC9F,EAAA,EAAD,CACEtB,UAAU,OACVrB,UAAWD,EAAQlB,OACnBkC,MAAM,cAHR,SAKGlC,MAIP,cAAC,EAAD,UACE,cAAC,EAAD,CACEsM,QAAS,kBAAM5M,EPNI,SAAAiC,GAAE,8CAAI,WAAMjC,GAAN,SAAAgB,EAAA,6DACjChB,EAAS6M,YAAmB,KAC5B7M,EAAS8M,eAFwB,kBAKzB3L,IAAM4L,OAAN,oBAA0B9K,IALD,OAM/BjC,EAASgN,YAAqB/K,IANC,gDAQ/BjC,EAAS6M,YAAmB,KAAMtL,UARH,yDAAJ,sDOMG0L,CAAchL,KACtC,aAAW,SAFb,SAIE,cAAC,KAAD,Y,oBCpCJnD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8E,KAAM,CACJvE,MAAO,OACPE,SAAU,YAKC,SAASyN,KACtB,IAAMlN,EAAWC,cAEXzB,EAAQ0B,YAAYC,GACpB/B,EAAU8B,YAAYC,GAG5BgN,qBAAU,WACRnN,ERhByB,uCAAM,WAAMA,GAAN,iBAAAgB,EAAA,6DAEjChB,EAASoN,YAAmB,KAC5BpN,EAASqN,eAHwB,kBAMRlM,IAAMmM,IAAI,aANF,gBAMvBjM,EANuB,EAMvBA,KAERrB,EAASuN,YAAqBlM,IARC,kDAU/BrB,EAASoN,YAAmB,KAAM7L,UAVH,0DAAN,yDQiBxB,CAACvB,IAEJ,IAAMwB,EAAU1C,KAEhB,OACE,qCACGV,GAAW,cAACoP,GAAA,EAAD,CAAkB/L,UAAU,aAExC,cAACgM,GAAA,EAAD,CAAMhM,UAAWD,EAAQsC,KAAzB,SACGtF,EAAMkP,KAAI,SAAA5M,GACT,OAAO,cAAC,GAAD,eAAsCA,GAAhBA,EAAQmB,YCtC/C,IAAM0L,GAAS,CACbxL,MAAO,CACLjD,UAAW,SAoBA0O,GAhBM,WACnB,OACE,oCACE,cAACxJ,EAAA,EAAD,CAAY7B,QAAQ,KAAKsL,cAAY,EAACC,MAAOH,GAAOxL,MAApD,yGAGA,cAACpC,EAAD,IACA,cAACqE,EAAA,EAAD,CAAY7B,QAAQ,KAAKsL,cAAY,EAArC,8DAGA,cAAC/I,EAAD,IACA,cAACoI,GAAD","file":"static/js/6.e71cbd36.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nexport const getError = state => state.contacts.error;\n","// import { Component } from 'react';\n// import { connect } from 'react-redux';\n//\nimport React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import PropTypes from 'prop-types';\n\nimport * as contactsOperations from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\n// import FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { withStyles } from '@material-ui/core/styles';\n\n// const styles = (theme) => ({\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    // alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: '46ch',\n    justifyContent: 'space-between',\n  },\n  field: {\n    // marginRight: '20px',\n    maxWidth: '46ch',\n  },\n  submit: {\n    margin: theme.spacing(3, 'auto', 2),\n    flexBasis: '30%',\n    // marginLeft: 'auto',\n    // marginRight: 'auto',\n  },\n}));\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      if (contacts.find(contact => contact.name === name)) {\n        alert(`${name} is already in contacts.`);\n        return;\n      }\n\n      dispatch(contactsOperations.addContact({ name, number }));\n\n      setName('');\n      setNumber('');\n    },\n    [dispatch, name, number, contacts],\n  );\n\n  //styles\n  const classes = useStyles();\n\n  return (\n    <div>\n      <form\n        className={classes.form}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          className={classes.field}\n          name=\"name\"\n          onChange={e => setName(e.currentTarget.value)}\n          value={name}\n          label=\"Имя\"\n          id=\"contactName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <TextField\n          className={classes.field}\n          name=\"number\"\n          onChange={e => setNumber(e.currentTarget.value)}\n          value={number}\n          label=\"Номер\"\n          id=\"contactName\"\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <Button\n          className={classes.submit}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Добавить\n        </Button>\n      </form>\n    </div>\n  );\n}\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   addContact = (newContact) => {\n//     if (this.props.contacts.find((contact) => contact.name === newContact.name)) {\n//       alert(`${newContact.name} is already in contacts.`);\n//       return;\n//     }\n//     this.props.onAddContact(newContact);\n\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   changeHandler = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n\n//   render() {\n//     const { classes } = this.props;\n\n//     return (\n//       <div>\n//         <FormControl\n//           className={classes.form}\n//           noValidate\n//           autoComplete=\"off\"\n//           onSubmit={(e) => {\n//             e.preventDefault();\n//             this.addContact({ ...this.state });\n//           }}\n//         >\n//           <TextField\n//             className={classes.field}\n//             name=\"name\"\n//             onChange={this.changeHandler}\n//             value={this.state.name}\n//             label=\"Имя\"\n//             id=\"contactName\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//           <TextField\n//             className={classes.field}\n//             name=\"number\"\n//             onChange={this.changeHandler}\n//             value={this.state.number}\n//             label=\"Номер\"\n//             id=\"contactName\"\n//             type=\"tel\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//           />\n//           <Button\n//             className={classes.submit}\n//             variant=\"contained\"\n//             color=\"primary\"\n//             type=\"submit\"\n//             // endIcon={<ExitToAppOutlined />}\n//           >\n//             Добавить\n//           </Button>\n//         </FormControl>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => ({\n//   contacts: getContactsSelector(state),\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onAddContact: (contact) => dispatch(addContact(contact)),\n// });\n\n// ContactForm.propTypes = { onAddContact: PropTypes.func };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(withStyles(styles, { withTheme: true })(ContactForm));\n","import axios from 'axios';\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  // requestError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'http://localhost:3001';\n\nexport const fetchContacts = () => async dispatch => {\n  // dispatch(requestError(''));\n  dispatch(fetchContactsError(''));\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n    // dispatch(requestError(error.toString()));\n  }\n};\n\nexport const addContact = newContact => async dispatch => {\n  dispatch(addContactError(''));\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', newContact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactError(''));\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\n// export default  { fetchContacts, addContact, deleteContact }\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","// import { connect } from 'react-redux';\n\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import PropTypes from 'prop-types';\n\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '..//..//redux/contacts/contacts-selectors';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '46ch',\n    marginBottom: '0.5em',\n  },\n}));\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n\n  const onChange = useCallback(\n    e => {\n      dispatch(changeFilter(e.target.value));\n    },\n    [dispatch],\n  );\n\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} variant=\"outlined\">\n      <InputLabel htmlFor=\"outlined-filter-input\">Filter</InputLabel>\n      <OutlinedInput\n        name=\"filter\"\n        id=\"outlined-filter-input\"\n        onChange={onChange}\n        value={filter}\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <FilterListIcon />\n          </InputAdornment>\n        }\n        labelWidth={40}\n      />\n    </form>\n  );\n}\n\n// const Filter = ({ filter, onChange }) => {\n//   const classes = useStyles();\n\n//   return (\n//     <form className={classes.root} variant=\"outlined\">\n//       <InputLabel htmlFor=\"outlined-filter-input\">Filter</InputLabel>\n//       <OutlinedInput\n//         name=\"filter\"\n//         id=\"outlined-filter-input\"\n//         onChange={onChange}\n//         value={filter}\n//         startAdornment={\n//           <InputAdornment position=\"start\">\n//             <FilterListIcon />\n//           </InputAdornment>\n//         }\n//         labelWidth={40}\n//       />\n//     </form>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   filter: getFilter(state),\n// });\n// // const mapStateToProps = ({ contacts: { filter } }) => ({ filter });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange: (e) => dispatch(changeFilter(e.target.value)),\n// });\n\n// Filter.propTypes = {\n//   filter: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","// import { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    marginBottom: '0.5em',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow:\n      '0px 2px 4px -1px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 4px 0px rgba(0,0,0,0.12)',\n  },\n  number: {\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  return (\n    <ListItem alignItems=\"flex-start\" className={classes.item}>\n      <ListItemText\n        primary={name}\n        secondary={\n          <Typography\n            component=\"span\"\n            className={classes.number}\n            color=\"textPrimary\"\n          >\n            {number}\n          </Typography>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          onClick={() => dispatch(deleteContact(id))}\n          aria-label=\"delete\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     deleteContact: (id) => dispatch(deleteContact(id)),\n//   };\n// };\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n// export default connect(null, mapDispatchToProps)(ContactListItem);\n","// import { Component } from 'react';\n// import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import PropTypes from 'prop-types';\n\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nimport ContactListItem from '../ContactListItem';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '46ch',\n    // backgroundColor: \"theme.palette.background.paper\",\n  },\n}));\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  const items = useSelector(contactsSelectors.getFilteredContacts);\n  const loading = useSelector(contactsSelectors.getLoading);\n  // const error = useSelector(contactsSelectors.getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {loading && <CircularProgress className=\"progress\" />}\n\n      <List className={classes.root}>\n        {items.map(contact => {\n          return <ContactListItem key={contact.id} {...contact} />;\n        })}\n      </List>\n    </>\n  );\n}\n\n// class ContactList extends Component {\n//   componentDidMount() {\n//     this.props.fetchContacts();\n//   }\n\n//   render() {\n\n//     const { classes } = this.props;\n\n//     return (\n//       <>\n//         {this.props.loading && <CircularProgress className=\"progress\" />}\n\n//         <List className={classes.root}>\n//           {this.props.items.map((contact) => {\n//             return <ContactListItem key={contact.id} {...contact} />;\n//           })}\n//         </List>\n//       </>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     items: contactsSelectors.getFilteredContacts(state),\n//     loading: contactsSelectors.getLoading(state),\n//     error: contactsSelectors.getError(state),\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchContacts: () => dispatch(fetchContacts()),\n// });\n\n// ContactList.propTypes = {\n//   items: PropTypes.array.isRequired,\n//   fetchContacts: PropTypes.func,\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(withStyles(styles, { withTheme: true })(ContactList));\n","import ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  title: {\n    marginTop: '20px',\n  },\n};\n\nconst ContactsView = () => {\n  return (\n    <section>\n      <Typography variant=\"h3\" gutterBottom style={styles.title}>\n        Телефонная книга\n      </Typography>\n      <ContactForm />\n      <Typography variant=\"h4\" gutterBottom>\n        Контакты\n      </Typography>\n      <Filter />\n      <ContactList />\n    </section>\n  );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}